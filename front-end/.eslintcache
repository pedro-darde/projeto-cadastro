[{"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\index.tsx":"1","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\App.tsx":"3","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\routes.tsx":"4","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Formulario\\FormularioCadastro.tsx":"5","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Lista\\listagem.tsx":"6","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\NavBar\\NavBar.tsx":"7","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Register\\Register.tsx":"8","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Footer\\Footer.tsx":"9","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Login\\Login.tsx":"10"},{"size":500,"mtime":1610977265091,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610977265091,"results":"13","hashOfConfig":"12"},{"size":246,"mtime":1611833058968,"results":"14","hashOfConfig":"12"},{"size":880,"mtime":1612214111062,"results":"15","hashOfConfig":"12"},{"size":7780,"mtime":1612200271288,"results":"16","hashOfConfig":"12"},{"size":6357,"mtime":1612215114158,"results":"17","hashOfConfig":"12"},{"size":730,"mtime":1612207803948,"results":"18","hashOfConfig":"12"},{"size":5981,"mtime":1612181551697,"results":"19","hashOfConfig":"12"},{"size":112,"mtime":1612178144060,"results":"20","hashOfConfig":"12"},{"size":3702,"mtime":1612214335465,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"7v84gd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\index.tsx",[],["46","47"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\App.tsx",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\routes.tsx",["48","49","50","51"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Formulario\\FormularioCadastro.tsx",["52","53","54"],"import React, { FormEvent, useEffect, useState } from \"react\";\r\nimport * as md from \"@material-ui/core\";\r\nimport \"../Formulario/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction FormularioCadastro() {\r\n  const [nome, setNome] = useState<string>(\"\");\r\n  const [sobrenome, setSobrenome] = useState<string>(\"\");\r\n  const [cpf, setCpf] = useState<string>(\"\");\r\n  const [promocao, setPromocao] = useState<boolean>(true);\r\n  const [novidade, setNovidades] = useState<boolean>(true);\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [dataNascimento, setDataNascimento] = useState<Date | null>();\r\n  const [usuario, setUsuario] = useState<string>(\"\");\r\n  const [senha, setSenha] = useState<string>(\"\");\r\n  const notify = () => toast(\"Registro incluido com sucesso!\");\r\n  const formatCPFNumbers = (value: any) => {\r\n    return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g, \"$1.$2.$3-$4\");\r\n  };\r\n\r\n  function cleanFields() {\r\n    setNome(\"\");\r\n    setSobrenome(\"\");\r\n    setCpf(\"\");\r\n    setEmail(\"\");\r\n    setUsuario(\"\");\r\n    setSenha(\"\");\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3333/register\";\r\n    await axios.post(url, {\r\n      nome: nome,\r\n      sobrenome: sobrenome,\r\n      cpf: cpf,\r\n      promocao: promocao,\r\n      novidades: novidade,\r\n      dataCadastro: new Date(),\r\n      email: email,\r\n      dataNascimento: dataNascimento,\r\n      usuario: usuario,\r\n      senha: senha,\r\n    });\r\n\r\n    cleanFields();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" id=\"container-cadastro\">\r\n        <form className=\"form-submit\" onSubmit={handleSubmit}>\r\n          <md.DialogTitle> Formul√°rio de Cadastro </md.DialogTitle>\r\n          <md.TextField\r\n            onChange={(event) => {\r\n              setNome(event.target.value);\r\n            }}\r\n            label=\"Esreva seu nome\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            id=\"input-nome\"\r\n            margin=\"normal\"\r\n            value={nome}\r\n            required={true}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <md.TextField\r\n            label=\"Esreva seu sobrenome\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            margin=\"normal\"\r\n            id=\"input-cadastro\"\r\n            onChange={(event) => {\r\n              setSobrenome(event.target.value);\r\n            }}\r\n            value={sobrenome}\r\n            required={true}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <md.TextField\r\n            inputProps={{\r\n              maxlength: 11,\r\n            }}\r\n            label=\"Escreva seu cpf\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            id=\"input-cadastro\"\r\n            margin=\"normal\"\r\n            onChange={(event) => {\r\n              const { value } = event.target;\r\n              event.target.value = formatCPFNumbers(value);\r\n              setCpf(event.target.value);\r\n            }}\r\n            value={cpf}\r\n            required={true}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <ContactsIcon />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <md.TextField\r\n            label=\"Esreva seu email\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            margin=\"normal\"\r\n            id=\"input-cadastro\"\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n            value={email}\r\n            required={true}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <AlternateEmailIcon />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              label=\"Data de nascimento\"\r\n              format=\"dd/MM/yyyy\"\r\n              fullWidth={true}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n              value={dataNascimento}\r\n              onChange={(event) => {\r\n                setDataNascimento(event);\r\n                console.log(dataNascimento);\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <md.TextField\r\n            onChange={(event) => {\r\n              setUsuario(event.target.value);\r\n            }}\r\n            label=\"Esreva seu usuario\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            id=\"input-nome\"\r\n            margin=\"normal\"\r\n            value={usuario}\r\n            required={true}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <AccountCircle />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <md.TextField\r\n            fullWidth={true}\r\n            id=\"standard-adornment-password\"\r\n            margin=\"normal\"\r\n            label=\"Defina sua senha\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={senha}\r\n            onChange={(event) => {\r\n              setSenha(event.target.value);\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <md.InputAdornment position=\"start\">\r\n                  <VpnKeyIcon />\r\n                </md.InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <md.FormLabel> Promo√ß√µes </md.FormLabel>\r\n          <md.Switch\r\n            checked={promocao}\r\n            color=\"primary\"\r\n            onChange={(event) => {\r\n              setPromocao(event.target.checked);\r\n            }}\r\n            value={promocao}\r\n          />\r\n          <md.FormLabel> Novidades </md.FormLabel>\r\n          <md.Switch\r\n            color=\"primary\"\r\n            checked={novidade}\r\n            onChange={(event) => {\r\n              setNovidades(event.target.checked);\r\n            }}\r\n            value={novidade}\r\n          />\r\n\r\n          <md.Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n            className=\"button-submit\"\r\n            onClick={notify}\r\n          >\r\n            {\" \"}\r\n            Cadastrar{\" \"}\r\n          </md.Button>\r\n\r\n          <ToastContainer />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FormularioCadastro;\r\n","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Lista\\listagem.tsx",["55","56","57","58"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\NavBar\\NavBar.tsx",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Register\\Register.tsx",["59","60"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as md from \"@material-ui/core\";\r\nimport \"../Lista/style.css\";\r\nimport \"./style.css\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\ninterface RegisterParams {\r\n  id: string;\r\n}\r\nexport default function Register() {\r\n  const params = useParams<RegisterParams>();\r\n  const [nome, setNome] = useState<string>(\"\");\r\n  const [sobrenome, setSobrenome] = useState<string>(\"\");\r\n  const [cpf, setCpf] = useState<string>(\"\");\r\n  const [promocao, setPromocao] = useState<boolean>(true);\r\n  const [novidade, setNovidades] = useState<boolean>(true);\r\n  const [dataCadastro, setDataCadastro] = useState<Date>();\r\n  const[email,setEmail]=useState<string>(\"\")\r\n  const[dataNascimento,setDataNascimento]=useState<Date|null>();\r\n  const dateFormat = require(\"dateformat\");\r\n  const formatCPFNumbers = (value: any) => {\r\n    return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g, \"$1.$2.$3-$4\");\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3333/register/${params.id}`)\r\n      .then((response) => {\r\n        setNome(response.data.nome);\r\n        setSobrenome(response.data.sobrenome);\r\n        setCpf(response.data.cpf);\r\n        setPromocao(response.data.promocao);\r\n        setNovidades(response.data.novidades);\r\n        setDataCadastro(response.data.dataCadastro);\r\n        setEmail(response.data.email);\r\n        setDataNascimento(response.data.dataNascimento)\r\n      });\r\n  }, []);\r\n\r\n  async function editRegister() {\r\n    axios.patch(\"http://localhost:3333/register\", {\r\n      id: params.id,\r\n      nome: nome,\r\n      sobrenome: sobrenome,\r\n      cpf: cpf,\r\n      promocao: promocao,\r\n      novidades: novidade,\r\n      dataCadastro: dataCadastro,\r\n      email: email,\r\n      dataNascimento: dataNascimento\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" id=\"container-cadastro\">\r\n      <label id=\"data-cadastro\">\r\n        Data do cadastro : {dateFormat(dataCadastro, \"dd/mm/yyyy\")}\r\n      </label>\r\n      <form className=\"form-submit\">\r\n        <md.DialogTitle>Editar Cadastro </md.DialogTitle>\r\n        <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          id=\"input-nome\"\r\n          margin=\"normal\"\r\n          value={nome}\r\n          label=\"Nome\"\r\n          onChange={(event) => {\r\n            setNome(event.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <md.InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </md.InputAdornment>\r\n            ),\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          margin=\"normal\"\r\n          id=\"input-cadastro\"\r\n          label=\"Sobrenome\"\r\n          value={sobrenome}\r\n          onChange={(event) => {\r\n            setSobrenome(event.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <md.InputAdornment position=\"start\">\r\n                <AccountCircle />\r\n              </md.InputAdornment>\r\n            ),\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <md.TextField\r\n          inputProps={{\r\n            maxlength: 11,\r\n          }}\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          id=\"input-cadastro\"\r\n          margin=\"normal\"\r\n          label=\"CPF\"\r\n          value={cpf}\r\n          onChange={(event) => {\r\n            const { value } = event.target;\r\n            event.target.value = formatCPFNumbers(value);\r\n            setCpf(event.target.value);\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <md.InputAdornment position=\"start\">\r\n                <ContactsIcon/>\r\n              </md.InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n          <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          label=\"Email Cadastro\"\r\n          margin=\"normal\"\r\n          id=\"input-cadastro\"\r\n          value={email}\r\n          onChange={(event) => {\r\n            setEmail(event.target.value);\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <md.InputAdornment position=\"start\">\r\n                <AlternateEmailIcon/>\r\n              </md.InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              label=\"Data de nascimento\"\r\n              format=\"dd/MM/yyyy\"\r\n              fullWidth={true}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n              value={dataNascimento}\r\n              onChange={(event) => {\r\n                setDataNascimento(event);\r\n                console.log(dataNascimento);\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        <md.FormLabel> Promo√ß√µes </md.FormLabel>\r\n        <md.Switch color=\"primary\" checked={promocao} />\r\n        <md.FormLabel> Novidades </md.FormLabel>\r\n        <md.Switch color=\"primary\" checked={novidade} />\r\n        <a\r\n          id=\"link-edit\"\r\n          href=\"/listagemCadastro\"\r\n          onClick={editRegister}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Confirmar Altera√ß√£o\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Footer\\Footer.tsx",[],["61","62"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Login\\Login.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":25,"nodeType":"69","messageId":"70","endLine":1,"endColumn":31},{"ruleId":"67","severity":1,"message":"71","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":25},{"ruleId":"67","severity":1,"message":"72","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":11},{"ruleId":"67","severity":1,"message":"73","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"74","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":37},{"ruleId":"67","severity":1,"message":"75","line":16,"column":3,"nodeType":"69","messageId":"70","endLine":16,"endColumn":21},{"ruleId":"67","severity":1,"message":"76","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":14},{"ruleId":"67","severity":1,"message":"77","line":14,"column":10,"nodeType":"69","messageId":"70","endLine":14,"endColumn":16},{"ruleId":"67","severity":1,"message":"78","line":28,"column":11,"nodeType":"69","messageId":"70","endLine":28,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":57,"column":6,"nodeType":"81","endLine":57,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":168,"column":25,"nodeType":"85","endLine":173,"endColumn":26},{"ruleId":"67","severity":1,"message":"75","line":14,"column":3,"nodeType":"69","messageId":"70","endLine":14,"endColumn":21},{"ruleId":"79","severity":1,"message":"86","line":47,"column":6,"nodeType":"81","endLine":47,"endColumn":8,"suggestions":"87"},{"ruleId":"63","replacedBy":"88"},{"ruleId":"65","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'App' is defined but never used.","'NavBar' is defined but never used.","'useEffect' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'Link' is defined but never used.","'config' is defined but never used.","'pedroPaodeBatata' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["92"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["93"],["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [token]",{"range":"98","text":"99"},"Update the dependencies array to be: [params.id]",{"range":"100","text":"101"},[1394,1396],"[token]",[1850,1852],"[params.id]"]