[{"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\index.tsx":"1","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\App.tsx":"3","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\routes.tsx":"4","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\NavBar\\NavBar.tsx":"5","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Lista\\listagem.tsx":"6","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Register\\Register.tsx":"7","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Formulario\\FormularioCadastro.tsx":"8","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\SucessMessage\\Sucess.tsx":"9"},{"size":500,"mtime":1610977265091,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1610977265091,"results":"12","hashOfConfig":"11"},{"size":246,"mtime":1611833058968,"results":"13","hashOfConfig":"11"},{"size":712,"mtime":1611919791008,"results":"14","hashOfConfig":"11"},{"size":711,"mtime":1611953422415,"results":"15","hashOfConfig":"11"},{"size":4222,"mtime":1611948892841,"results":"16","hashOfConfig":"11"},{"size":3212,"mtime":1611942054122,"results":"17","hashOfConfig":"11"},{"size":3695,"mtime":1611947330698,"results":"18","hashOfConfig":"11"},{"size":149,"mtime":1611942395646,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"7v84gd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\index.tsx",[],["42","43"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\App.tsx",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\routes.tsx",["44","45"],"import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport App from \"./App\";\r\nimport ListagemCadastro from \"./components/Lista/listagem\";\r\nimport FormularioCadastro from \"./components/Formulario/FormularioCadastro\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport Register from \"./components/Register/Register\";\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n        <NavBar/>\r\n        <Route path=\"/\" exact component={FormularioCadastro}></Route>\r\n        <Route path=\"/listagemCadastro\" component={ListagemCadastro}></Route>\r\n        <Route path=\"/register/:id\" component={Register}></Route>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\NavBar\\NavBar.tsx",[],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Lista\\listagem.tsx",["46"],"C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Register\\Register.tsx",["47","48","49","50","51","52","53"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as md from \"@material-ui/core\";\r\nimport \"../Lista/style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\"\r\ninterface RegisterParams {\r\n  id: string;\r\n}\r\nexport default function Register() {\r\n  const params = useParams<RegisterParams>();\r\n  const [nome, setNome] = useState<string>(\"\");\r\n  const [sobrenome, setSobrenome] = useState<string>(\"\");\r\n  const [cpf, setCpf] = useState<string>(\"\");\r\n  const [promocao, setPromocao] = useState<boolean>(true);\r\n  const [novidade, setNovidades] = useState<boolean>(true);\r\n  const [dataCadastro, setDataCadastro] = useState<Date>();\r\n  const dateFormat = require(\"dateformat\");\r\n  const formatCPFNumbers = (value: any) =>{\r\n    return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g,\"\\$1.\\$2.\\$3\\-\\$4\")\r\n  }\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3333/register/${params.id}`)\r\n      .then((response) => {\r\n        setNome(response.data.nome);\r\n        setSobrenome(response.data.sobrenome);\r\n        setCpf(response.data.cpf);\r\n        setPromocao(response.data.promocao);\r\n        setNovidades(response.data.novidades);\r\n        setDataCadastro(response.data.dataCadastro);\r\n      });\r\n  }, []);\r\n\r\n  async function editRegister() {\r\n    axios.patch(\"http://localhost:3333/register\", {\r\n      id: params.id,\r\n      nome: nome,\r\n      sobrenome: sobrenome,\r\n      cpf: cpf,\r\n      promocao: promocao,\r\n      novidades: novidade,\r\n      dataCadastro: dataCadastro,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" id=\"container-cadastro\">\r\n      <label className=\"col-sm-2 col-form-label\" id=\"data-cadastro\">\r\n        Data do cadastro : {dateFormat(dataCadastro, \"dd/mm/yyyy\")}\r\n      </label>\r\n      <form className=\"form-submit\">\r\n        <md.DialogTitle>Editar Cadastro </md.DialogTitle>\r\n        <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          id=\"input-nome\"\r\n          margin=\"normal\"\r\n          value={nome}\r\n          onChange={(event) => {\r\n            setNome(event.target.value);\r\n          }}\r\n        />\r\n        <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          margin=\"normal\"\r\n          id=\"input-cadastro\"\r\n          value={sobrenome}\r\n          onChange={(event) => {\r\n            setSobrenome(event.target.value);\r\n          }}\r\n        />\r\n        <md.TextField\r\n          variant=\"outlined\"\r\n          fullWidth={true}\r\n          id=\"input-cadastro\"\r\n          margin=\"normal\"\r\n          value={cpf}\r\n          onChange={(event) => {\r\n            setCpf(event.target.value);\r\n          }}\r\n        />\r\n        <md.FormLabel> Promoções </md.FormLabel>\r\n        <md.Switch color=\"primary\" checked={promocao} />\r\n        <md.FormLabel> Novidades </md.FormLabel>\r\n        <md.Switch color=\"primary\" checked={novidade} />\r\n        <Link\r\n          id=\"link-redirect\"\r\n          type=\"submit\"\r\n          to=\"/listagemCadastro\"\r\n          onClick={editRegister}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Confirmar Alteração\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\Formulario\\FormularioCadastro.tsx",["54"],"import React, { FormEvent, useEffect, useState } from \"react\";\r\nimport * as md from \"@material-ui/core\";\r\nimport \"../Formulario/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction FormularioCadastro() {\r\n  const [nome, setNome] = useState<string>(\"\");\r\n  const [sobrenome, setSobrenome] = useState<string>(\"\");\r\n  const [cpf, setCpf] = useState<string>(\"\");\r\n  const [promocao, setPromocao] = useState<boolean>(true);\r\n  const [novidade, setNovidades] = useState<boolean>(true);\r\n  const notify = () => toast(\"Registro incluido com sucesso!\");\r\n  const formatCPFNumbers = (value: any) => {\r\n    return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g, \"$1.$2.$3-$4\");\r\n  };\r\n\r\n  function cleanFields() {\r\n    setNome(\"\");\r\n    setSobrenome(\"\");\r\n    setCpf(\"\");\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3333/register\";\r\n    await axios.post(url, {\r\n      nome: nome,\r\n      sobrenome: sobrenome,\r\n      cpf: cpf,\r\n      promocao: promocao,\r\n      novidades: novidade,\r\n      dataCadastro: new Date(),\r\n    });\r\n\r\n    cleanFields();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" id=\"container-cadastro\">\r\n        <form className=\"form-submit\" onSubmit={handleSubmit}>\r\n          <md.DialogTitle> Formulário de Cadastro </md.DialogTitle>\r\n          <md.TextField\r\n            onChange={(event) => {\r\n              setNome(event.target.value);\r\n            }}\r\n            label=\"Esreva seu nome\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            id=\"input-nome\"\r\n            margin=\"normal\"\r\n            value={nome}\r\n            required={true}\r\n          />\r\n          <md.TextField\r\n            label=\"Esreva seu sobrenome\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            margin=\"normal\"\r\n            id=\"input-cadastro\"\r\n            onChange={(event) => {\r\n              setSobrenome(event.target.value);\r\n            }}\r\n            value={sobrenome}\r\n            required={true}\r\n          />\r\n          <md.TextField\r\n            inputProps={{\r\n              maxlength: 11,\r\n            }}\r\n            label=\"Escreva seu cpf\"\r\n            variant=\"outlined\"\r\n            fullWidth={true}\r\n            id=\"input-cadastro\"\r\n            margin=\"normal\"\r\n            onChange={(event) => {\r\n              const { value } = event.target;\r\n              event.target.value = formatCPFNumbers(value);\r\n              setCpf(event.target.value);\r\n            }}\r\n            value={cpf}\r\n            required={true}\r\n          />\r\n          <md.FormLabel> Promoções </md.FormLabel>\r\n          <md.Switch\r\n            checked={promocao}\r\n            color=\"primary\"\r\n            onChange={(event) => {\r\n              setPromocao(event.target.checked);\r\n            }}\r\n            value={promocao}\r\n          />\r\n          <md.FormLabel> Novidades </md.FormLabel>\r\n          <md.Switch\r\n            color=\"primary\"\r\n            checked={novidade}\r\n            onChange={(event) => {\r\n              setNovidades(event.target.checked);\r\n            }}\r\n            value={novidade}\r\n          />\r\n          <md.Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            type=\"submit\"\r\n            className=\"button-submit\"\r\n            onClick={notify}\r\n          >\r\n            {\" \"}\r\n            Cadastrar{\" \"}\r\n          </md.Button>\r\n          <ToastContainer/>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FormularioCadastro;\r\n","C:\\Users\\Administrator\\Documents\\Projects\\projeto-cadastro\\front-end\\src\\components\\SucessMessage\\Sucess.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":25,"nodeType":"61","messageId":"62","endLine":1,"endColumn":31},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":109,"column":21,"nodeType":"66","endLine":114,"endColumn":22},{"ruleId":"59","severity":1,"message":"67","line":20,"column":9,"nodeType":"61","messageId":"62","endLine":20,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":21,"column":59,"nodeType":"70","messageId":"71","endLine":21,"endColumn":60,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":21,"column":63,"nodeType":"70","messageId":"71","endLine":21,"endColumn":64,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"69","line":21,"column":67,"nodeType":"70","messageId":"71","endLine":21,"endColumn":68,"suggestions":"74"},{"ruleId":"68","severity":1,"message":"75","line":21,"column":70,"nodeType":"70","messageId":"71","endLine":21,"endColumn":71,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"69","line":21,"column":72,"nodeType":"70","messageId":"71","endLine":21,"endColumn":73,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":34,"column":6,"nodeType":"80","endLine":34,"endColumn":8,"suggestions":"81"},{"ruleId":"59","severity":1,"message":"82","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":37},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'formatCPFNumbers' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["85","86"],["87","88"],["89","90"],"Unnecessary escape character: \\-.",["91","92"],["93","94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"99","fix":"103","desc":"101"},{"messageId":"96","fix":"104","desc":"98"},{"messageId":"99","fix":"105","desc":"101"},{"messageId":"96","fix":"106","desc":"98"},{"messageId":"99","fix":"107","desc":"101"},{"messageId":"96","fix":"108","desc":"98"},{"messageId":"99","fix":"109","desc":"101"},{"desc":"110","fix":"111"},"removeEscape",{"range":"112","text":"113"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"114","text":"115"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"116","text":"113"},{"range":"117","text":"115"},{"range":"118","text":"113"},{"range":"119","text":"115"},{"range":"120","text":"113"},{"range":"121","text":"115"},{"range":"122","text":"113"},{"range":"123","text":"115"},"Update the dependencies array to be: [params.id]",{"range":"124","text":"125"},[880,881],"",[880,880],"\\",[884,885],[884,884],[888,889],[888,888],[891,892],[891,891],[893,894],[893,893],[1311,1313],"[params.id]"]